name: PR Checks
run-name: Checks running whenever new PR is created
on: 
  pull_request:
    branches:
      - integration

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the Source code from the latest commit
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install NPM
        run: |
          npm install
      - name: Install JQ
        run: sudo apt-get install jq
      - name: Install the SFDX CLI
        run: |
          npm install @salesforce/cli --global
      - name: Create server key file
        run: |
          touch server.key
          echo -e "${{ secrets.SF_CICD_SERVERKEY }}" >> server.key
      - name: Authorize DevHub
        run: sf org login jwt --json --alias DevHub --set-default --set-default-dev-hub --username "${{ secrets.SF_CICD_USERNAME }}" --keyfile /home/runner/work/game-force/game-force/server.key --clientid ${{ secrets.SF_CLIENT_SECRET }}
      # Add alias here
      - name: Create a Scratch Org
        run: sf org create scratch --target-dev-hub DevHub --name build_${{ github.event.pull_request.number }} --definition-file config/project-scratch-def.json --set-default --duration-days 1
      # ONLY CREATE SCRATCH ORGS WHEN THEY DONT EXIST
      # - name: List all orgs
      #   run: |
      #     sf org list --json --all --skip-connection-status | jq . > sfOrgList.json
      #     cat sfOrgList.json
      #     jq ".result.scratchOrgs | .[] | select(.alias == "build_${{ github.event.pull_request.number }}")'" sfOrgList.json > scratch.json
      #     cat scratch.json
      - name: Push source to Scratch Org
        run: sf project deploy start
      - name: Run unit tests
        run: sf apex run test --wait 30 --test-level RunAllTestsInOrg --code-coverage
      # - name: Delete Scratch Org
      #   if: always()
      #   run: sf org delete scratch --target-org build_${{ github.event.pull_request.number }} --no-prompt

      

